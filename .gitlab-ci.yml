stages:
  - build
  - deploy

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY/gibz/teaching/m426/infa2agruppe2/frontend:$CI_COMMIT_SHA .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/gibz/teaching/m426/infa2agruppe2/frontend:$CI_COMMIT_SHA

deploy-job:
  image: alpine:latest
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './keys'
    VM_IPADDRESS: "152.67.77.19"
    SSH_USER: "ubuntu"
  stage: deploy
  environment: production
  before_script:
    - apk add --update curl bash
    - mkdir ./keys
    - chmod 777 ./keys
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - chmod 600 ./keys/ssh.key
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - cat ./keys/ssh.key | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$VM_IPADDRESS "sudo docker kill frontend | true"
    - ssh $SSH_USER@$VM_IPADDRESS "sudo docker rm frontend | true"
    - ssh $SSH_USER@$VM_IPADDRESS "sudo docker image prune -f"
    - ssh $SSH_USER@$VM_IPADDRESS "sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh $SSH_USER@$VM_IPADDRESS "sudo docker pull $CI_REGISTRY/gibz/teaching/m426/infa2agruppe2/frontend:$CI_COMMIT_SHA"
    - ssh $SSH_USER@$VM_IPADDRESS "sudo docker run -d --name frontend --rm -p 5000:3000 $CI_REGISTRY/gibz/teaching/m426/infa2agruppe2/frontend:$CI_COMMIT_SHA"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

